TypeScript testing

- `tsc` para compilar (global: sudo npm install -g typescript)
- `tsconfig.json` con configuraci√≥n

{
  "compilerOptions": {
    "target": "es5",
    "module": "ES6",
    "moduleResolution": "node",
    "strict": true,
    "esModuleInterop": true,
    "skipLibCheck": true,
    "forceConsistentCasingInFileNames": true,
    "outDir": "dist",
    "sourceMap": true,
    "alwaysStrict": true,
    "noImplicitAny": true
  },
  "include": [
    "src/**/*"
  ],
  "exclude": [
    "node_modules"
  ]
}


- Webpack para empaquetar (`webpack.config.js`) - Dependencias cruzadas `webpack-cli`

const path = require('path');

module.exports = {
    entry: './src/index.ts',
    mode: 'development',
    module: {
        rules: [
            {
                test: /\.tsx?$/,
                use: 'awesome-typescript-loader',
                exclude: /node_modules/,
            },
        ],
    },
    resolve: {
        extensions: ['.tsx', '.ts', '.js'],
    },
    output: {
        filename: 'app.js',
        path: path.resolve(__dirname, 'dist'),
    },
};

- Jest para los tests y necesita Babel para traducir TS a JS (`babel.config.js`) con dependencia `@babel/preset-env`

module.exports = {
    presets: [['@babel/preset-env']],
};

- Migrar de webpack a rollup
https://shipshape.io/blog/converting-a-webpack-build-to-rollup/
